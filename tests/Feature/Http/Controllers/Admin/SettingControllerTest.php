<?php

namespace Tests\Feature\Http\Controllers\Admin;

use App\Models\Settings\Setting;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

/**
 * @see \App\Http\Controllers\Admin\SettingController
 */
class SettingControllerTest extends TestCase
{
    use RefreshDatabase, WithFaker;

    public function setUp(): void
    {
        parent::setUp();
        $this->seed();
    }

    /**
     * @test
     */
    public function index_returns_an_ok_response()
    {
//        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $user = factory(\App\Models\Users\User::class)->create();

        $response = $this->actingAs($user)->get(route('settings.index'));

        $response->assertOk();
        $response->assertViewIs('admin.settings.index');
        $response->assertViewHas('settings');
        foreach (Setting::all() as $setting) {
            $response->assertSee($setting->name);
            $response->assertSee($setting->value);
            $response->assertSee($setting->unit);
        }

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function update_returns_an_ok_response()
    {
//        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $user = factory(\App\Models\Users\User::class)->create();
        $data = [];
        foreach (Setting::all() as $setting) {
            $data['value-'. $setting->id] = $this->faker->randomFloat(1, 0, 100);
        }
        $response = $this->actingAs($user)->put(route('settings.update'), $data);

        $response->assertRedirect(route('settings.index'));
        foreach (Setting::all() as $setting) {
            $this->assertDatabaseHas('settings', [
                'value' => $data['value-' . $setting->id],
                'id' => $setting->id,
            ]);
        }

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function update_validates_with_a_form_request()
    {
        $this->assertActionUsesFormRequest(
            \App\Http\Controllers\Admin\SettingController::class,
            'update',
            \App\Http\Requests\Settings\UpdateRequest::class
        );
    }

    // test cases...
}
